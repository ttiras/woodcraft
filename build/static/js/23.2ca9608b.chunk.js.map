{"version":3,"sources":["wrappers/breadcrumb/Breadcrumb.js","components/brand-logo/BrandLogoOneSingle.js","wrappers/brand-logo/BrandLogoSliderOne.js","components/section-title/SectionTitleWithText.js","components/text-grid/TextGridOneSingle.js","wrappers/text-grid/TextGridOne.js","pages/other/About.js"],"names":["Breadcrumb","className","separator","item","NavLink","finalItem","BrandLogoOneSingle","data","sliderClassName","spaceBottomClass","src","process","image","alt","BrandLogoSliderOne","spaceTopClass","settings","loop","autoplay","delay","disableOnInteraction","grabCursor","breakpoints","1024","slidesPerView","768","640","320","brandLogoData","map","single","key","SectionTitleWithText","TextGridOneSingle","title","text","TextGridOne","textGridData","About","pathname","location","Helmet","name","content","to","LayoutOne","headerTop"],"mappings":"mHAAA,sCAoBeA,IAhBI,WACjB,OACE,yBAAKC,UAAU,yCACb,yBAAKA,UAAU,aACb,yBAAKA,UAAU,kCACb,kBAAC,cAAD,CACEC,UAAW,mCACXC,KAAMC,IACNC,UAAW,c,maCSRC,EAlBY,SAAC,GAAiD,IAA/CC,EAA8C,EAA9CA,KAAMC,EAAwC,EAAxCA,gBAAiBC,EAAuB,EAAvBA,iBACnD,OACE,yBACER,UAAS,4BAAuBO,GAAoC,GAA3D,YACPC,GAAsC,KAGxC,yBAAKC,IAAKC,GAAyBJ,EAAKK,MAAOC,IAAI,O,SCoD1CC,IAxDY,SAAC,GAAyC,IAAvCL,EAAsC,EAAtCA,iBAAkBM,EAAoB,EAApBA,cACxCC,EAAW,CACfC,MAAM,EACNC,SAAU,CACRC,MAAO,IACPC,sBAAsB,GAExBC,YAAY,EACZC,YAAa,CACXC,KAAM,CACJC,cAAe,GAEjBC,IAAK,CACHD,cAAe,GAEjBE,IAAK,CACHF,cAAe,GAEjBG,IAAK,CACHH,cAAe,KAKrB,OACE,yBACEvB,UAAS,0BACPQ,GAAsC,GAD/B,aAEJM,GAAgC,KAErC,yBAAKd,UAAU,aACb,yBAAKA,UAAU,qBACb,kBAAC,IAAWe,EACTY,GACCA,EAAcC,KAAI,SAACC,EAAQC,GACzB,OACE,kBAAC,EAAD,CACExB,KAAMuB,EACNC,IAAKA,EACLvB,gBAAgB,eAChBC,iBAAiB,mB,4kCClBtBuB,EAzBc,SAAC,GAAyC,IAAvCjB,EAAsC,EAAtCA,cAAeN,EAAuB,EAAvBA,iBAC7C,OACE,yBACER,UAAS,uBAAkBc,GAAgC,GAAlD,YACPN,GAAsC,KAGxC,yBAAKR,UAAU,aACb,yBAAKA,UAAU,+BACb,wCACA,6DACA,4pDACqvC,S,SCMhvCgC,EAlBW,SAAC,GAAgC,IAA9B1B,EAA6B,EAA7BA,KAAME,EAAuB,EAAvBA,iBACjC,OACE,yBAAKR,UAAU,qBACb,yBACEA,UAAS,yBAAoBQ,GAAsC,KAEnE,4BAAKF,EAAK2B,OACV,2BAAI3B,EAAK4B,SCwBFC,EA7BK,SAAC,GAA0B,IAAxB3B,EAAuB,EAAvBA,iBACrB,OACE,yBACER,UAAS,6BACPQ,GAAsC,KAGxC,yBAAKR,UAAU,aACb,yBAAKA,UAAU,OACZoC,GACCA,EAAaR,KAAI,SAACC,EAAQC,GACxB,OACE,kBAAC,EAAD,CACExB,KAAMuB,EACNrB,iBAAiB,QACjBsB,IAAKA,W,SC8BRO,UAvCD,SAAC,GAAkB,IACvBC,EADsB,EAAfC,SACPD,SAER,OACE,kBAAC,WAAD,KACE,kBAACE,EAAA,EAAD,KACE,+CACA,0BACEC,KAAK,cACLC,QAAQ,0YAGZ,kBAAC,kBAAD,CAAiBC,GAA6B,KAA9C,YAGA,kBAAC,kBAAD,CAAiBA,GAAIjC,GAAyB4B,GAA9C,OAGA,kBAACM,EAAA,EAAD,CAAWC,UAAU,WAEnB,kBAAC9C,EAAA,EAAD,MAGA,kBAAC,EAAD,CAAsBe,cAAc,SAASN,iBAAiB,UAG9D,kBAAC,EAAD,CAAaA,iBAAiB,UAG9B,kBAACK,EAAA,EAAD,CAAoBL,iBAAiB","file":"static/js/23.2ca9608b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport { Breadcrumbs } from \"react-breadcrumbs-dynamic\";\r\n\r\nconst Breadcrumb = () => {\r\n  return (\r\n    <div className=\"breadcrumb-area pt-35 pb-35 bg-gray-3\">\r\n      <div className=\"container\">\r\n        <div className=\"breadcrumb-content text-center\">\r\n          <Breadcrumbs\r\n            separator={<span>/</span>}\r\n            item={NavLink}\r\n            finalItem={\"span\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Breadcrumb;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst BrandLogoOneSingle = ({ data, sliderClassName, spaceBottomClass }) => {\r\n  return (\r\n    <div\r\n      className={`single-brand-logo ${sliderClassName ? sliderClassName : \"\"} ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n      }`}\r\n    >\r\n      <img src={process.env.PUBLIC_URL + data.image} alt=\"\" />\r\n    </div>\r\n  );\r\n};\r\n\r\nBrandLogoOneSingle.propTypes = {\r\n  data: PropTypes.object,\r\n  sliderClassName: PropTypes.string,\r\n  spaceBottomClass: PropTypes.string\r\n};\r\n\r\nexport default BrandLogoOneSingle;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport Swiper from \"react-id-swiper\";\r\nimport BrandLogoOneSingle from \"../../components/brand-logo/BrandLogoOneSingle\";\r\nimport brandLogoData from \"../../data/brand-logos/brand-logo-one.json\";\r\n\r\nconst BrandLogoSliderOne = ({ spaceBottomClass, spaceTopClass }) => {\r\n  const settings = {\r\n    loop: true,\r\n    autoplay: {\r\n      delay: 3000,\r\n      disableOnInteraction: false\r\n    },\r\n    grabCursor: true,\r\n    breakpoints: {\r\n      1024: {\r\n        slidesPerView: 5\r\n      },\r\n      768: {\r\n        slidesPerView: 4\r\n      },\r\n      640: {\r\n        slidesPerView: 3\r\n      },\r\n      320: {\r\n        slidesPerView: 2\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div\r\n      className={`brand-logo-area ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n      }  ${spaceTopClass ? spaceTopClass : \"\"}`}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"brand-logo-active\">\r\n          <Swiper {...settings}>\r\n            {brandLogoData &&\r\n              brandLogoData.map((single, key) => {\r\n                return (\r\n                  <BrandLogoOneSingle\r\n                    data={single}\r\n                    key={key}\r\n                    sliderClassName=\"swiper-slide\"\r\n                    spaceBottomClass=\"mb-30\"\r\n                  />\r\n                );\r\n              })}\r\n          </Swiper>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nBrandLogoSliderOne.propTypes = {\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceTopClass: PropTypes.string\r\n};\r\n\r\nexport default BrandLogoSliderOne;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst SectionTitleWithText = ({ spaceTopClass, spaceBottomClass }) => {\r\n  return (\r\n    <div\r\n      className={`welcome-area ${spaceTopClass ? spaceTopClass : \"\"} ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"welcome-content text-center\">\r\n          <h5>BİZ</h5>\r\n          <h1>MiCoTa nasıl doğdu?</h1>\r\n          <p>\r\n          Bu ürün gerçek bir ihtiyaçtan doğdu aslında. Kahveyi çok seviyorum ve günün en keyifli anları benim için kahve kokusuyla buluştuğum zamanlar. Masalar veya sehpalar, canım kahvemi içerken aramda hep bir mesafe varmış hissi yaratıp aynı zamanda da işin keyif kısmına gölge düşürüp zahmet yaratan unsurlardı. Kahvem yakınımda olsun istiyordum, ama keyif alayım derken sıcacık kahvem üzerime dökülsün istemezdim. Peki nasıl olacaktı da hem kahvemi sıcacık ve zahmetsizce içip hem de üzerime dökmeyecek ve her yudumda masa veya sehpaya eğilip doğrulma zahmetine girmeyecektim. Öyle bir ürün tasarlamalıydım ki sadece kendim için değil misafirlerim de geldiğinde zarif bir sunum sağlamalıydım. İşte MiCoTa fikri böyle doğdu, mini coffee table; yani mini kahve masası. MiCoTa’m öyle zarif ve hafif ki benimle her yere gelebiliyor, hatta kahvemi dahi onunla servis edebiliyorum. Ayrıca kahvemin dökülmemesi için güvenli bir zemin sağlıyor, ortada yer kaplamıyor ve misafirler geldiğinde sehpalar etrafı daraltmıyor. Odada koltuk kenarında veya koltuk üzerinde, yatakta, balkonda, bahçede, her yerde MiCoTa ile kahvem hemen elimin altında, eğilmeden ulaşabileceğim mesafede tam bir “keyif an”ı yaşatıyor. El yapımı MiCoTa’lar kahve içmenin en keyifli, ergonomik ve doğal yolu. {\" \"}\r\n          </p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nSectionTitleWithText.propTypes = {\r\n  spaceBottomClass: PropTypes.string,\r\n  spaceTopClass: PropTypes.string\r\n};\r\n\r\nexport default SectionTitleWithText;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\n\r\nconst TextGridOneSingle = ({ data, spaceBottomClass }) => {\r\n  return (\r\n    <div className=\"col-lg-4 col-md-4\">\r\n      <div\r\n        className={`single-mission ${spaceBottomClass ? spaceBottomClass : \"\"}`}\r\n      >\r\n        <h3>{data.title}</h3>\r\n        <p>{data.text}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextGridOneSingle.propTypes = {\r\n  data: PropTypes.object,\r\n  spaceBottomClass: PropTypes.string\r\n};\r\n\r\nexport default TextGridOneSingle;\r\n","import PropTypes from \"prop-types\";\r\nimport React from \"react\";\r\nimport textGridData from \"../../data/text-grid/text-grid-one.json\";\r\nimport TextGridOneSingle from \"../../components/text-grid/TextGridOneSingle.js\";\r\n\r\nconst TextGridOne = ({ spaceBottomClass }) => {\r\n  return (\r\n    <div\r\n      className={`about-mission-area ${\r\n        spaceBottomClass ? spaceBottomClass : \"\"\r\n      }`}\r\n    >\r\n      <div className=\"container\">\r\n        <div className=\"row\">\r\n          {textGridData &&\r\n            textGridData.map((single, key) => {\r\n              return (\r\n                <TextGridOneSingle\r\n                  data={single}\r\n                  spaceBottomClass=\"mb-30\"\r\n                  key={key}\r\n                />\r\n              );\r\n            })}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTextGridOne.propTypes = {\r\n  spaceBottomClass: PropTypes.string\r\n};\r\n\r\nexport default TextGridOne;\r\n","import PropTypes from \"prop-types\";\r\nimport React, { Fragment } from \"react\";\r\nimport { Helmet } from \"react-helmet\";\r\n\r\nimport { BreadcrumbsItem } from \"react-breadcrumbs-dynamic\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport Breadcrumb from \"../../wrappers/breadcrumb/Breadcrumb\";\r\nimport SectionTitleWithText from \"../../components/section-title/SectionTitleWithText\";\r\nimport TextGridOne from \"../../wrappers/text-grid/TextGridOne\";\r\nimport BrandLogoSliderOne from \"../../wrappers/brand-logo/BrandLogoSliderOne\";\r\n\r\nconst About = ({ location }) => {\r\n  const { pathname } = location;\r\n\r\n  return (\r\n    <Fragment>\r\n      <Helmet>\r\n        <title>MiCoTa | Biz</title>\r\n        <meta\r\n          name='description'\r\n          content='Alışveriş sitemiz micota.com.tr hakkında. Keyifle tasarladığımız ve ürettiğimiz doğal ahşap ve doğal boya kullanılan ürünlerimizi nerde ve nasıl hazrıladığımız hakkında kısa bilgiler. Sunum tepsisi, kahve çay sunumu, ahşap yuvarlak tepsi ve supla, mini coffee table.'\r\n        />\r\n      </Helmet>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + \"/\"}>\r\n        Anasayfa\r\n      </BreadcrumbsItem>\r\n      <BreadcrumbsItem to={process.env.PUBLIC_URL + pathname}>\r\n        Biz\r\n      </BreadcrumbsItem>\r\n      <LayoutOne headerTop='visible'>\r\n        {/* breadcrumb */}\r\n        <Breadcrumb />\r\n\r\n        {/* section title with text */}\r\n        <SectionTitleWithText spaceTopClass='pt-100' spaceBottomClass='pb-95' />\r\n\r\n        {/* text grid */}\r\n        <TextGridOne spaceBottomClass='pb-70' />\r\n\r\n        {/* brand logo slider */}\r\n        <BrandLogoSliderOne spaceBottomClass='pb-70' />\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nAbout.propTypes = {\r\n  location: PropTypes.object,\r\n};\r\n\r\nexport default About;\r\n"],"sourceRoot":""}