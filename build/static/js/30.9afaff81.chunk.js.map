{"version":3,"sources":["pages/other/Cart.js"],"names":["connect","state","cartItems","cartData","dispatch","addToCart","item","addToast","quantityCount","decreaseQuantity","deleteFromCart","deleteAllFromCart","location","useState","notes","setNotes","isGift","setIsGift","useToasts","cartTotalPrice","useEffect","data","localStorage","getItem","data1","JSON","parse","setItem","headerTop","className","length","map","cartItem","key","discountedPrice","getDiscountPrice","price","discount","finalProductPrice","toFixed","finalDiscountedPrice","quantity","to","id","path","image","name","selectedProductColor","selectedProductSize","onClick","type","value","readOnly","disabled","undefined","cartItemStock","checked","onChange","placeholder","rows","e","target"],"mappings":"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","file":"static/js/30.9afaff81.chunk.js","sourcesContent":["import PropTypes from \"prop-types\";\r\nimport React, { Fragment, useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useToasts } from \"react-toast-notifications\";\r\nimport { connect } from \"react-redux\";\r\nimport { getDiscountPrice } from \"../../helpers/product\";\r\nimport {\r\n  addToCart,\r\n  decreaseQuantity,\r\n  deleteFromCart,\r\n  cartItemStock,\r\n  deleteAllFromCart,\r\n} from \"../../redux/actions/cartActions\";\r\nimport LayoutOne from \"../../layouts/LayoutOne\";\r\nimport \"./Checkout.css\";\r\nimport ProductImgFallback from \"../../helpers/ProductImgFallback\";\r\n\r\nconst Cart = ({\r\n  location,\r\n  cartItems,\r\n  decreaseQuantity,\r\n  addToCart,\r\n  deleteFromCart,\r\n  deleteAllFromCart,\r\n}) => {\r\n  const [quantityCount] = useState(1);\r\n  const [notes, setNotes] = useState(\"\");\r\n  const [isGift, setIsGift] = useState(false);\r\n  const { addToast } = useToasts();\r\n  let cartTotalPrice = 0;\r\n\r\n  useEffect(() => {\r\n    const data = localStorage.getItem(\"notes\");\r\n    if (data) {\r\n      setNotes(data);\r\n    }\r\n    const data1 = localStorage.getItem(\"isGift\");\r\n    if (data) {\r\n      setIsGift(JSON.parse(data1));\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"notes\", notes);\r\n  }, [notes]);\r\n\r\n  useEffect(() => {\r\n    localStorage.setItem(\"isGift\", isGift);\r\n  }, [isGift]);\r\n\r\n  return (\r\n    <Fragment>\r\n      <LayoutOne headerTop='visible'>\r\n        <div className='cart-main-area pt-90 pb-100'>\r\n          <div className='container'>\r\n            {cartItems && cartItems.length >= 1 ? (\r\n              <Fragment>\r\n                <h3 className='cart-page-title'>Sipariş Özeti</h3>\r\n                <div className='row'>\r\n                  <div className='col-12'>\r\n                    <div className='table-content table-responsive cart-table-content'>\r\n                      <table>\r\n                        <thead>\r\n                          <tr>\r\n                            <th>Görsel</th>\r\n                            <th>Ürün Adı</th>\r\n                            <th>Fiyat</th>\r\n                            <th>Adet</th>\r\n                            <th>Ara Toplam</th>\r\n                            <th>Sil</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {cartItems.map((cartItem, key) => {\r\n                            const discountedPrice = getDiscountPrice(\r\n                              cartItem.price,\r\n                              cartItem.discount\r\n                            );\r\n                            const finalProductPrice = cartItem.price.toFixed(2);\r\n                            const finalDiscountedPrice = discountedPrice.toFixed(\r\n                              2\r\n                            );\r\n\r\n                            discountedPrice != null\r\n                              ? (cartTotalPrice +=\r\n                                  finalDiscountedPrice * cartItem.quantity)\r\n                              : (cartTotalPrice +=\r\n                                  finalProductPrice * cartItem.quantity);\r\n                            return (\r\n                              <tr key={key}>\r\n                                <td className='product-thumbnail'>\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      cartItem.id\r\n                                    }\r\n                                  >\r\n                                    <ProductImgFallback\r\n                        path={cartItem.image[0].path}\r\n                        className=\"img-fluid\"\r\n                        name={cartItem.name}\r\n                      />\r\n                                  </Link>\r\n                                </td>\r\n\r\n                                <td className='product-name'>\r\n                                  <Link\r\n                                    to={\r\n                                      process.env.PUBLIC_URL +\r\n                                      \"/product/\" +\r\n                                      cartItem.id\r\n                                    }\r\n                                  >\r\n                                    {cartItem.name}\r\n                                  </Link>\r\n                                  {cartItem.selectedProductColor &&\r\n                                  cartItem.selectedProductSize ? (\r\n                                    <div className='cart-item-variation'>\r\n                                      <span>\r\n                                        Color: {cartItem.selectedProductColor}\r\n                                      </span>\r\n                                      <span>\r\n                                        Size: {cartItem.selectedProductSize}\r\n                                      </span>\r\n                                    </div>\r\n                                  ) : (\r\n                                    \"\"\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className='product-price-cart'>\r\n                                  {discountedPrice !== null ? (\r\n                                    <Fragment>\r\n                                      <span className='amount old'>\r\n                                        {finalProductPrice + \" TL\"}\r\n                                      </span>\r\n                                      <span className='amount'>\r\n                                        {finalDiscountedPrice + \" TL\"}\r\n                                      </span>\r\n                                    </Fragment>\r\n                                  ) : (\r\n                                    <span className='amount'>\r\n                                      {finalProductPrice + \" TL\"}\r\n                                    </span>\r\n                                  )}\r\n                                </td>\r\n\r\n                                <td className='product-quantity'>\r\n                                  <div className='cart-plus-minus'>\r\n                                    <button\r\n                                      className='dec qtybutton'\r\n                                      onClick={() =>\r\n                                        decreaseQuantity(cartItem, addToast)\r\n                                      }\r\n                                    >\r\n                                      -\r\n                                    </button>\r\n                                    <input\r\n                                      className='cart-plus-minus-box'\r\n                                      type='text'\r\n                                      value={cartItem.quantity}\r\n                                      readOnly\r\n                                    />\r\n                                    <button\r\n                                      className='inc qtybutton'\r\n                                      onClick={() =>\r\n                                        addToCart(\r\n                                          cartItem,\r\n                                          addToast,\r\n                                          quantityCount\r\n                                        )\r\n                                      }\r\n                                      disabled={\r\n                                        cartItem !== undefined &&\r\n                                        cartItem.quantity &&\r\n                                        cartItem.quantity >=\r\n                                          cartItemStock(\r\n                                            cartItem,\r\n                                            cartItem.selectedProductColor,\r\n                                            cartItem.selectedProductSize\r\n                                          )\r\n                                      }\r\n                                    >\r\n                                      +\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                                <td className='product-subtotal'>\r\n                                  {discountedPrice !== null\r\n                                    ? (\r\n                                        finalDiscountedPrice * cartItem.quantity\r\n                                      ).toFixed(2) + \" TL\"\r\n                                    : (\r\n                                        finalProductPrice * cartItem.quantity\r\n                                      ).toFixed(2) + \" TL\"}\r\n                                </td>\r\n\r\n                                <td className='product-remove'>\r\n                                  <button\r\n                                    onClick={() =>\r\n                                      deleteFromCart(cartItem, addToast)\r\n                                    }\r\n                                  >\r\n                                    <i className='fa fa-times'></i>\r\n                                  </button>\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n\r\n                <div className='row'>\r\n                  <div className='col-lg-8 col-md-12'>\r\n                    <div className='cart-tax'>\r\n                      <div className='title-wrap'>\r\n                        <h4 className='cart-bottom-title section-bg-gray'>\r\n                          Alışverişinizle ilgili eklemek istedikleriniz\r\n                        </h4>\r\n                      </div>\r\n                      <div className='tax-wrapper'>\r\n                        <div className='mb-2'>\r\n                          <label>Hediye Paketi Olsun</label>\r\n                          <input\r\n                            className='checkbox'\r\n                            checked={isGift}\r\n                            onChange={() => setIsGift(!isGift)}\r\n                            type='checkbox'\r\n                          />\r\n                        </div>\r\n                        <div className='additional-info'>\r\n                          <label>Sipariş Notları</label>\r\n                          <textarea\r\n                            placeholder='Siparişinizle ilgili belirtmek istediğiniz konular... '\r\n                            name='message'\r\n                            value={notes}\r\n                            rows='2'\r\n                            onChange={(e) => setNotes(e.target.value)}\r\n                          />\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                  <div className='col-lg-4 col-md-12'>\r\n                    <div className='grand-totall'>\r\n                      <div className='title-wrap'>\r\n                        <h4 className='cart-bottom-title section-bg-gary-cart'>\r\n                          Sepet Toplamı\r\n                        </h4>\r\n                      </div>\r\n                      <h5>\r\n                        Ürünler Toplamı (KDV Dahil){\" \"}\r\n                        <span>{cartTotalPrice.toFixed(2) + \" TL\"}</span>\r\n                      </h5>\r\n\r\n                      <h5>\r\n                        Kargo{\" \"}\r\n                        <span>\r\n                          {cartTotalPrice.toFixed(2) > 150\r\n                            ? \"Ücretsiz\"\r\n                            : \"10 TL\"}\r\n                        </span>\r\n                      </h5>\r\n\r\n                      <h4 className='grand-totall-title'>\r\n                        Ödenecek Tutar{\" \"}\r\n                        <span>\r\n                          {cartTotalPrice.toFixed(2) > 150\r\n                            ? cartTotalPrice.toFixed(2) + \" TL\"\r\n                            : (cartTotalPrice + 10).toFixed(2) + \" TL\"}\r\n                        </span>\r\n                      </h4>\r\n                      <Link to={process.env.PUBLIC_URL + \"/checkout\"}>\r\n                        Siparişi Tamamla\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n                <div className='row'>\r\n                  <div className='col-lg-12'>\r\n                    <div className='cart-shiping-update-wrapper'>\r\n                      <div className='cart-shiping-update'>\r\n                        <Link to={process.env.PUBLIC_URL + \"/shop\"}>\r\n                          Alışverişe Devam Et\r\n                        </Link>\r\n                      </div>\r\n                      <div className='cart-clear'>\r\n                        <button onClick={() => deleteAllFromCart(addToast)}>\r\n                          Sepeti Boşalt\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Fragment>\r\n            ) : (\r\n              <div className='row'>\r\n                <div className='col-lg-12'>\r\n                  <div className='item-empty-area text-center'>\r\n                    <div className='item-empty-area__icon mb-30'>\r\n                      <i className='pe-7s-cart'></i>\r\n                    </div>\r\n                    <div className='item-empty-area__text'>\r\n                      Sepet Boş <br />{\" \"}\r\n                      <Link to={process.env.PUBLIC_URL + \"/shop\"}>\r\n                        Alışverişe Başla\r\n                      </Link>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            )}\r\n          </div>\r\n        </div>\r\n      </LayoutOne>\r\n    </Fragment>\r\n  );\r\n};\r\n\r\nCart.propTypes = {\r\n  addToCart: PropTypes.func,\r\n  cartItems: PropTypes.array,\r\n  decreaseQuantity: PropTypes.func,\r\n  location: PropTypes.object,\r\n  deleteAllFromCart: PropTypes.func,\r\n  deleteFromCart: PropTypes.func,\r\n};\r\n\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    cartItems: state.cartData,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    addToCart: (item, addToast, quantityCount) => {\r\n      dispatch(addToCart(item, addToast, quantityCount));\r\n    },\r\n    decreaseQuantity: (item, addToast) => {\r\n      dispatch(decreaseQuantity(item, addToast));\r\n    },\r\n    deleteFromCart: (item, addToast) => {\r\n      dispatch(deleteFromCart(item, addToast));\r\n    },\r\n    deleteAllFromCart: (addToast) => {\r\n      dispatch(deleteAllFromCart(addToast));\r\n    },\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Cart);\r\n"],"sourceRoot":""}